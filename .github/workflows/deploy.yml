name: Deploy Keycloak to AWS Fargate

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      keycloak_version:
        description: 'Keycloak version to deploy'
        required: false
        default: '26.0'

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: dabih-auth-keycloak
  ECS_SERVICE: dabih-auth-keycloak
  ECS_CLUSTER: dabih-auth-keycloak-cluster
  CONTAINER_NAME: keycloak

jobs:
  deploy:
    name: Deploy Keycloak
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set Keycloak version
      id: keycloak-version
      run: |
        if [ -n "${{ github.event.inputs.keycloak_version }}" ]; then
          echo "version=${{ github.event.inputs.keycloak_version }}" >> $GITHUB_OUTPUT
        else
          echo "version=26.0" >> $GITHUB_OUTPUT
        fi

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        KEYCLOAK_VERSION: ${{ steps.keycloak-version.outputs.version }}
      run: |
        # Build Docker image
        docker build \
          --build-arg KEYCLOAK_VERSION=$KEYCLOAK_VERSION \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -f docker/Dockerfile \
          docker/
        
        # Push images to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download current task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ env.ECR_REPOSITORY }} \
          --query taskDefinition > task-definition.json

    - name: Fill in new image ID in task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Get service status
      run: |
        aws ecs describe-services \
          --cluster ${{ env.ECS_CLUSTER }} \
          --services ${{ env.ECS_SERVICE }} \
          --query 'services[0].{Status:status,RunningCount:runningCount,DesiredCount:desiredCount}'

    - name: Print Keycloak URL
      run: |
        echo "Keycloak has been deployed successfully!"
        echo "Access Keycloak at: https://auth.trinnvis.no"
        echo "Admin Console: https://auth.trinnvis.no/admin"